// <auto-generated />
using System;
using E_mart.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_mart.Migrations
{
    [DbContext(typeof(E_MartDbContext))]
    [Migration("20250812150625_initialcreate3")]
    partial class initialcreate3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_mart.Models.CartDetails", b =>
                {
                    b.Property<int>("CartDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cart_d_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartDetailId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    b.Property<decimal>("LoyalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("loyal_price");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int")
                        .HasColumnName("loyalty_points");

                    b.Property<decimal>("Mrp")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("mrp");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("PurchaseMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("purchase_mode");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("CartDetailId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("cart_details");
                });

            modelBuilder.Entity("E_mart.Models.CartMaster", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime>("CartDate")
                        .HasColumnType("date")
                        .HasColumnName("cart_dt");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CartId");

                    b.HasIndex("UserId");

                    b.ToTable("cart_master");
                });

            modelBuilder.Entity("E_mart.Models.ConfigMaster", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("config_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfigId"));

                    b.Property<string>("ConfigName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("config_name");

                    b.HasKey("ConfigId");

                    b.ToTable("config_master");
                });

            modelBuilder.Entity("E_mart.Models.CtgMaster", b =>
                {
                    b.Property<int>("CtgMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ctg_master_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CtgMasterId"));

                    b.Property<string>("CtgId")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ctg_id");

                    b.Property<string>("CtgImgPath")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ctg_img_path");

                    b.Property<string>("CtgName")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ctg_name");

                    b.Property<bool?>("Flag")
                        .HasColumnType("bit")
                        .HasColumnName("flag");

                    b.Property<string>("SubCtgName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sub_ctg_name");

                    b.HasKey("CtgMasterId");

                    b.ToTable("ctg_master");
                });

            modelBuilder.Entity("E_mart.Models.InvoiceDetails", b =>
                {
                    b.Property<int>("InvoiceDtlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("invoice_dtl_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceDtlId"));

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("invoice_id");

                    b.Property<double>("LoyalPrice")
                        .HasColumnType("float")
                        .HasColumnName("loyal_price");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int")
                        .HasColumnName("loyalty_points");

                    b.Property<double>("Mrp")
                        .HasColumnType("float")
                        .HasColumnName("mrp");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("PurchaseMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("purchase_mode");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("InvoiceDtlId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("invoice_details");
                });

            modelBuilder.Entity("E_mart.Models.InvoiceMaster", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("invoice_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<double>("FinalPayment")
                        .HasColumnType("float")
                        .HasColumnName("final_payment");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("invoice_date");

                    b.Property<double>("Tax")
                        .HasColumnType("float")
                        .HasColumnName("tax");

                    b.Property<double>("TotalPayment")
                        .HasColumnType("float")
                        .HasColumnName("total_payment");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("InvoiceId");

                    b.HasIndex("UserId");

                    b.ToTable("invoice_master");
                });

            modelBuilder.Entity("E_mart.Models.ProdDetailMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfigDtls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("config_dtls");

                    b.Property<int>("ConfigId")
                        .HasColumnType("int")
                        .HasColumnName("config_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.HasKey("Id");

                    b.HasIndex("ConfigId");

                    b.ToTable("prod_detail_master");
                });

            modelBuilder.Entity("E_mart.Models.ProductMaster", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CtgMasterId")
                        .HasColumnType("int")
                        .HasColumnName("ctg_master_id");

                    b.Property<decimal?>("LoyalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("loyal_price");

                    b.Property<int?>("LoyaltyPoints")
                        .HasColumnType("int")
                        .HasColumnName("loyalty_points");

                    b.Property<decimal?>("MrpPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("mrp_price");

                    b.Property<string>("ProdBdesc")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("prod_bdesc");

                    b.Property<string>("ProdName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("prod_name");

                    b.Property<string>("ProdSdesc")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("prod_sdesc");

                    b.Property<string>("ProductImg")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_img");

                    b.HasKey("ProductId");

                    b.HasIndex("CtgMasterId");

                    b.ToTable("product_master");
                });

            modelBuilder.Entity("E_mart.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)")
                        .HasColumnName("email");

                    b.Property<bool>("Loyalty")
                        .HasColumnType("bit")
                        .HasColumnName("loyalty");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int")
                        .HasColumnName("loyalty_points");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("phone_no");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("username");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("E_mart.Models.CartDetails", b =>
                {
                    b.HasOne("E_mart.Models.CartMaster", "Cart")
                        .WithMany("CartDetails")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_mart.Models.ProductMaster", "Product")
                        .WithMany("CartDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_mart.Models.CartMaster", b =>
                {
                    b.HasOne("E_mart.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_mart.Models.InvoiceDetails", b =>
                {
                    b.HasOne("E_mart.Models.InvoiceMaster", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_mart.Models.ProductMaster", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_mart.Models.InvoiceMaster", b =>
                {
                    b.HasOne("E_mart.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_mart.Models.ProdDetailMaster", b =>
                {
                    b.HasOne("E_mart.Models.ConfigMaster", "Config")
                        .WithMany()
                        .HasForeignKey("ConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Config");
                });

            modelBuilder.Entity("E_mart.Models.ProductMaster", b =>
                {
                    b.HasOne("E_mart.Models.CtgMaster", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CtgMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_mart.Models.CartMaster", b =>
                {
                    b.Navigation("CartDetails");
                });

            modelBuilder.Entity("E_mart.Models.CtgMaster", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("E_mart.Models.ProductMaster", b =>
                {
                    b.Navigation("CartDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
